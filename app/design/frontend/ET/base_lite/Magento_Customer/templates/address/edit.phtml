<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

/** @var \Magento\Customer\Block\Address\Edit $block */
/** @var \Magento\Customer\ViewModel\Address $viewModel */
/** @var \Magento\Framework\Escaper $escaper */
/** @var \Magento\Framework\View\Helper\SecureHtmlRenderer $secureRenderer */
/** @var \Magento\Customer\ViewModel\Address\RegionProvider $regionProvider */
$viewModel = $block->getViewModel();
$regionProvider = $block->getRegionProvider();
?>
<?php $_company = $block->getLayout()->createBlock(\Magento\Customer\Block\Widget\Company::class) ?>
<?php $_telephone = $block->getLayout()->createBlock(\Magento\Customer\Block\Widget\Telephone::class) ?>
<?php $_fax = $block->getLayout()->createBlock(\Magento\Customer\Block\Widget\Fax::class) ?>
<?php $_country_id = $block->getAttributeData()->getFrontendLabel('country_id'); ?>
<?php $_street = $block->getAttributeData()->getFrontendLabel('street'); ?>
<?php $_city = $block->getAttributeData()->getFrontendLabel('city'); ?>
<?php $_region = $block->getAttributeData()->getFrontendLabel('region'); ?>
<?php $_selectRegion = 'Please select a region, state or province.'; ?>
<?php $_displayAll = $block->getConfig('general/region/display_all'); ?>

<?php $_vatidValidationClass = $viewModel->addressGetAttributeValidationClass('vat_id'); ?>
<?php $_cityValidationClass = $viewModel->addressGetAttributeValidationClass('city'); ?>
<?php $_postcodeValidationClass_value = $viewModel->addressGetAttributeValidationClass('postcode'); ?>
<?php $_postcodeValidationClass = $_postcodeValidationClass_value; ?>
<?php $_streetValidationClass = $viewModel->addressGetAttributeValidationClass('street'); ?>
<?php $_streetValidationClassNotRequired = $_streetValidationClass !== null ?
    trim(str_replace('required-entry', '', $_streetValidationClass)) : ''; ?>
<?php $_regionValidationClass = $viewModel->addressGetAttributeValidationClass('region'); ?>
<form class="form-address-edit"
      action="<?= $escaper->escapeUrl($block->getSaveUrl()) ?>"
      method="post"
      id="form-validate"
      enctype="multipart/form-data"
      onsubmit="return validateForm()"
      data-hasrequired="<?= $escaper->escapeHtmlAttr(__('* Required Fields')) ?>">
    <fieldset class="fieldset">
    <input type="hidden" name="country_id" id="country_id" value="IN">
        <legend class="legend"><span><?= $escaper->escapeHtml(__('Contact Information')) ?></span></legend><br>
        <?= $block->getBlockHtml('formkey') ?>
        <input type="hidden" name="success_url" value="<?= $escaper->escapeUrl($block->getSuccessUrl()) ?>">
        <input type="hidden" name="error_url" value="<?= $escaper->escapeUrl($block->getErrorUrl()) ?>">
        <?= $block->getNameBlockHtml() ?>

        <?php if ($_company->isEnabled()): ?>
            <?= $_company->setCompany($block->getAddress()->getCompany())->toHtml() ?>
        <?php endif ?>

        <?php if ($_telephone->isEnabled()): ?>
            <div class="field telephone required">
                <label class="label" for="telephone">
                    <span><?= $escaper->escapeHtml(__('Phone Number')) ?></span>
                </label>
                <div class="control">
                    <input type="text"
                           name="telephone"
                           id="telephone"
                           value="<?= $escaper->escapeHtmlAttr($block->getAddress()->getTelephone()) ?>"
                           title="<?= $escaper->escapeHtmlAttr(__('Phone Number')) ?>"
                           class="input-text required-entry validate-digits minimum-length-10 maximum-length-10"
                           data-validate="{required:true, 'validate-digits':true, 'minlength':10, 'maxlength':10}">
                </div>
            </div>
        <?php endif ?>

        <?php if ($_fax->isEnabled()): ?>
            <?= $_fax->setFax($block->getAddress()->getFax())->toHtml() ?>
        <?php endif ?>

    </fieldset>
    <fieldset class="fieldset">
        <legend class="legend"><span><?= $escaper->escapeHtml(__('Address')) ?></span></legend><br>
        <div class="field street required">
            <label for="street_1" class="label"><span><?= /* @noEscape */ $_street ?></span></label>
            <div class="control">
                <div class="field primary">
                    <label for="street_1" class="label">
                        <span><?= $escaper->escapeHtml(__('Street Address: Line %1', 1)) ?></span>
                    </label>
                </div>
                <input type="text"
                       name="street[0]"
                       value="<?= $escaper->escapeHtmlAttr($block->getStreetLine(1)) ?>"
                       title="<?= /* @noEscape */ $_street ?>"
                       id="street_1"
                       class="input-text <?= $escaper->escapeHtmlAttr($_streetValidationClass) ?>"/>
                <div class="nested">
                    <?php for ($_i = 1, $_n = 2; $_i < $_n; $_i++): ?>
                        <div class="field additional">
                            <label class="label" for="street_<?= /* @noEscape */ $_i + 1 ?>">
                                <span><?= $escaper->escapeHtml(__('Street Address: Line %1', $_i + 1)) ?></span>
                            </label>
                            <div class="control">
                                <input type="text" name="street[<?= /* @noEscape */ $_i ?>]"
                                       value="<?= $escaper->escapeHtmlAttr($block->getStreetLine($_i + 1)) ?>"
                                       title="<?= $escaper->escapeHtmlAttr(__('Street Address %1', $_i + 1)) ?>"
                                       id="street_<?= /* @noEscape */ $_i + 1 ?>"
                                       class="input-text <?= $escaper->escapeHtmlAttr($_streetValidationClassNotRequired) ?>">
                            </div>
                        </div>
                    <?php endfor; ?>
                </div>
            </div>
        </div>

        <div class="field city required">
            <label class="label" for="city">
                <span><?= /* @noEscape */ $block->getAttributeData()->getFrontendLabel('city') ?></span>
            </label>
            <div class="control">
                <input type="text"
                       name="city"
                       value="<?= $escaper->escapeHtmlAttr($block->getAddress()->getCity()) ?>"
                       title="<?= $escaper->escapeHtmlAttr(__('City')) ?>"
                       class="input-text required-entry maximum-length-255"
                       id="city"
                       data-validate="{required:true, 'maxlength':255}">
            </div>
        </div>

        <div class="field region required" hidden>
            <label class="label" for="region_id">
                <span><?= /* @noEscape */ $_region ?></span>
            </label>
            <div class="control">
                <select id="region_id"
                        name="region_id"
                        title="<?= /* @noEscape */ $_region ?>"
                        class="validate-select region_id required-entry"
                        <?= /* @noEscape */ !$_displayAll ? ' disabled="disabled"' : '' ?>>
                    <option value="563"><?= $escaper->escapeHtml(__($_selectRegion)) ?></option>
                </select>
                <input type="text"
                       id="region"
                       name="region"
                       value="<?= $escaper->escapeHtmlAttr($block->getRegion()) ?>"
                       title="<?= /* @noEscape */ $_region ?>"
                       class="input-text validate-not-number-first <?= $escaper->escapeHtmlAttr($_regionValidationClass) ?>"
                       <?= !$_displayAll ? ' disabled="disabled"' : '' ?>/>
            </div>
        </div>

        <div class="field zip required">
            <label class="label" for="zip">
                <span><?= /* @noEscape */ $block->getAttributeData()->getFrontendLabel('postcode') ?></span>
            </label>
            <div class="control">
                <input type="text"
                       name="postcode"
                       value="<?= $escaper->escapeHtmlAttr($block->getAddress()->getPostcode()) ?>"
                       title="<?= /* @noEscape */ $block->getAttributeData()->getFrontendLabel('postcode') ?>"
                       id="zip"
                       class="input-text required-entry validate-digits minimum-length-6 maximum-length-6"
                       data-validate="{required:true, 'validate-digits':true, 'minlength':6, 'maxlength':6}">
            </div>
        </div>

        <?php if ($block->isDefaultBilling()): ?>
            <div class="message info">
                <span><?= $escaper->escapeHtml(__("It's a default billing address.")) ?></span>
            </div>
        <?php elseif ($block->canSetAsDefaultBilling()): ?>
            <div class="field choice set billing">
                <input type="checkbox" id="primary_billing" name="default_billing" value="1" class="checkbox">
                <label class="label" for="primary_billing">
                    <span><?= $escaper->escapeHtml(__('Use as my default billing address')) ?></span>
                </label>
            </div>
        <?php else: ?>
            <input type="hidden" name="default_billing" value="1" />
        <?php endif; ?>

        <?php if ($block->isDefaultShipping()): ?>
            <div class="message info">
                <span><?= $escaper->escapeHtml(__("It's a default shipping address.")) ?></span>
            </div>
        <?php elseif ($block->canSetAsDefaultShipping()): ?>
            <div class="field choice set shipping">
                <input type="checkbox" id="primary_shipping" name="default_shipping" value="1" class="checkbox">
                <label class="label" for="primary_shipping">
                    <span><?= $escaper->escapeHtml(__('Use as my default shipping address')) ?></span>
                </label>
            </div>
        <?php else: ?>
            <input type="hidden" name="default_shipping" value="1">
        <?php endif; ?>
    </fieldset>
    <div class="actions-toolbar">
        <div class="primary">
            <button type="submit"
                    class="action save primary"
                    data-action="save-address"
                    title="<?= $escaper->escapeHtmlAttr(__('Save Address')) ?>">
                <span><?= $escaper->escapeHtml(__('Save Address')) ?></span>
            </button>
        </div>
        <div class="secondary">
            <a class="action back" href="<?= $escaper->escapeUrl($block->getBackUrl()) ?>">
                <span><?= $escaper->escapeHtml(__('Go back')) ?></span>
            </a>
        </div>
    </div>
</form>
<script>
function validateForm() {
    let isValid = true;
    let errorMessage = '';

    // Validate First Name
    const firstname = document.getElementById('firstname');
    if (!firstname.value.trim()) {
        errorMessage += 'First Name is required\n';
        isValid = false;
    } else if (!/^[a-zA-Z]+$/.test(firstname.value.trim())) {
        errorMessage += 'First Name should contain only alphabets\n';
        isValid = false;
    } else if (firstname.value.length > 255) {
        errorMessage += 'First Name should not exceed 255 characters\n';
        isValid = false;
    }

    // Validate Last Name
    const lastname = document.getElementById('lastname');
    if (!lastname.value.trim()) {
        errorMessage += 'Last Name is required\n';
        isValid = false;
    } else if (!/^[a-zA-Z]+$/.test(lastname.value.trim())) {
        errorMessage += 'Last Name should contain only alphabets\n';
        isValid = false;
    } else if (lastname.value.length > 255) {
        errorMessage += 'Last Name should not exceed 255 characters\n';
        isValid = false;
    }

    // Validate Phone Number
    const telephone = document.getElementById('telephone');
    if (!telephone.value.trim()) {
        errorMessage += 'Phone Number is required\n';
        isValid = false;
    } else if (!/^\d{10}$/.test(telephone.value.trim())) {
        errorMessage += 'Phone Number should be exactly 10 digits\n';
        isValid = false;
    }

    // Validate Street Address
    const street1 = document.getElementById('street_1');
    if (!street1.value.trim()) {
        errorMessage += 'Street Address Line 1 is required\n';
        isValid = false;
    }

    // Validate City
    const city = document.getElementById('city');
    if (!city.value.trim()) {
        errorMessage += 'City is required\n';
        isValid = false;
    } else if (city.value.length > 255) {
        errorMessage += 'City should not exceed 255 characters\n';
        isValid = false;
    }

    // Validate Region/State
    // const regionId = document.getElementById('region_id');
    // const region = document.getElementById('region');
    // if (regionId.style.display !== 'none' && regionId.value === '') {
    //     errorMessage += 'Please select a State\n';
    //     isValid = false;
    // } else if (region.style.display !== 'none' && !region.value.trim()) {
    //     errorMessage += 'Region is required\n';
    //     isValid = false;
    // }

    // Validate Postcode/ZIP
    const postcode = document.getElementById('zip');
    if (!postcode.value.trim()) {
        errorMessage += 'Postcode/ZIP is required\n';
        isValid = false;
    } else if (!/^\d{6}$/.test(postcode.value.trim())) {
        errorMessage += 'Postcode should be exactly 6 digits\n';
        isValid = false;
    }

    // Validate Company (if required)
    const company = document.getElementById('company');
    if (company && company.hasAttribute('required') && !company.value.trim()) {
        errorMessage += 'Company is required\n';
        isValid = false;
    } else if (company && company.value.length > 255) {
        errorMessage += 'Company should not exceed 255 characters\n';
        isValid = false;
    }

    // Show error messages if validation fails
    if (!isValid) {
        alert(errorMessage);
        return false;
    }

    return true;
}

// Real-time validation for phone number
document.getElementById('telephone').addEventListener('input', function(e) {
    let value = e.target.value;
    
    // Remove any non-digit characters
    value = value.replace(/\D/g, '');
    
    // Limit to 10 digits
    if (value.length > 10) {
        value = value.slice(0, 10);
    }
    
    // Update input value
    e.target.value = value;
});

// Real-time validation for postcode
document.getElementById('zip').addEventListener('input', function(e) {
    let value = e.target.value;
    
    // Remove any non-digit characters
    value = value.replace(/\D/g, '');
    
    // Limit to 6 digits
    if (value.length > 6) {
        value = value.slice(0, 6);
    }
    
    // Update input value
    e.target.value = value;
});

// Real-time validation for names
function validateNameInput(input) {
    let value = input.value;
    
    // Remove any non-alphabet characters
    value = value.replace(/[^a-zA-Z]/g, '');
    
    // Limit to 255 characters
    if (value.length > 255) {
        value = value.slice(0, 255);
    }
    
    // Update input value
    input.value = value;
}

document.getElementById('firstname').addEventListener('input', function(e) {
    validateNameInput(e.target);
});

document.getElementById('lastname').addEventListener('input', function(e) {
    validateNameInput(e.target);
});

// Real-time validation for city
document.getElementById('city').addEventListener('input', function(e) {
    let value = e.target.value;
    
    // Limit to 255 characters
    if (value.length > 255) {
        e.target.value = value.slice(0, 255);
    }
});

// Disable form submit button until all required fields are filled
function checkRequiredFields() {
    const requiredFields = document.querySelectorAll('input[required], select[required]');
    const submitButton = document.querySelector('button[type="submit"]');
    
    let allFilled = true;
    requiredFields.forEach(field => {
        if (!field.value.trim()) {
            allFilled = false;
        }
    });
    
    submitButton.disabled = !allFilled;
}

// Add event listeners to all required fields
document.querySelectorAll('input[required], select[required]').forEach(field => {
    field.addEventListener('input', checkRequiredFields);
    field.addEventListener('change', checkRequiredFields);
});

// Initial check on page load
document.addEventListener('DOMContentLoaded', checkRequiredFields);
</script>