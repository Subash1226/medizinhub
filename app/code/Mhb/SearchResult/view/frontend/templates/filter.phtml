<div class="cusrp-filter">
    <!-- Filter Header -->
    <div class="cusrp-filter-header d-flex justify-content-between align-items-center">
        <div class="cusrp-filter-main-title">
            <span>Filters</span>               
            <svg class="cusrp-filter-main-title-svg" xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
                <path d="M6.532 5.48755H13.468C13.925 5.48755 14.322 5.48755 14.633 5.51755C14.94 5.54555 15.318 5.61255 15.626 5.86555C16.023 6.19155 16.247 6.67955 16.25 7.18755C16.252 7.57755 16.078 7.91355 15.91 8.17955C15.742 8.44955 15.499 8.76955 15.215 9.14355L12.619 12.5655C12.367 12.8975 12.304 12.9855 12.26 13.0756C12.2142 13.1698 12.1809 13.2697 12.161 13.3726C12.141 13.4725 12.138 13.5845 12.138 14.0065V18.2495C12.138 18.4575 12.138 18.6616 12.124 18.8276C12.109 18.9916 12.072 19.2546 11.9 19.4906C11.69 19.7776 11.363 19.9635 11 19.9855C10.698 20.0045 10.453 19.8826 10.31 19.8026C10.1472 19.7057 9.98841 19.6023 9.834 19.4925L8.845 18.8096L8.797 18.7766C8.606 18.6455 8.394 18.5006 8.235 18.2996C8.09682 18.1262 7.99389 17.9274 7.932 17.7146C7.861 17.4705 7.862 17.2146 7.862 16.9766V14.0065C7.862 13.5845 7.858 13.4725 7.839 13.3726C7.8188 13.2696 7.78518 13.1698 7.739 13.0756C7.696 12.9855 7.633 12.8975 7.381 12.5655L4.785 9.14355C4.501 8.76955 4.258 8.44955 4.089 8.17955C3.922 7.91355 3.749 7.57755 3.75 7.18755C3.75053 6.93489 3.80672 6.68544 3.91457 6.45696C4.02242 6.22847 4.17928 6.02655 4.374 5.86555C4.682 5.61255 5.06 5.54555 5.367 5.51655C5.678 5.48755 6.074 5.48755 6.532 5.48755ZM5.308 7.04255C5.27434 7.07945 5.25424 7.12671 5.251 7.17655C5.257 7.19555 5.281 7.25755 5.361 7.38355C5.489 7.58855 5.691 7.85555 6.001 8.26455L8.576 11.6585L8.611 11.7045C8.812 11.9685 8.972 12.1795 9.089 12.4195C9.19167 12.6309 9.26567 12.8526 9.311 13.0845C9.362 13.3456 9.361 13.6116 9.361 13.9486V16.9166C9.361 17.0746 9.362 17.1636 9.366 17.2305L9.372 17.2926C9.37887 17.3191 9.39113 17.3439 9.408 17.3656L9.449 17.3996C9.499 17.4396 9.569 17.4875 9.697 17.5756L10.638 18.2256V13.9475C10.638 13.6105 10.638 13.3445 10.689 13.0835C10.7343 12.8522 10.8083 12.6305 10.911 12.4185C11.028 12.1785 11.188 11.9685 11.389 11.7035L11.424 11.6575L13.999 8.26355C14.309 7.85355 14.511 7.58755 14.639 7.38255C14.719 7.25655 14.743 7.19455 14.749 7.17555C14.7458 7.12571 14.7257 7.07845 14.692 7.04155C14.6266 7.02414 14.5596 7.01342 14.492 7.00955C14.26 6.98755 13.936 6.98655 13.432 6.98655H6.568C6.064 6.98655 5.74 6.98655 5.508 7.00955C5.44043 7.01342 5.37342 7.02514 5.308 7.04255ZM15.75 11.2375C15.75 11.0386 15.829 10.8479 15.9697 10.7072C16.1103 10.5666 16.3011 10.4875 16.5 10.4875H19.5C19.6989 10.4875 19.8897 10.5666 20.0303 10.7072C20.171 10.8479 20.25 11.0386 20.25 11.2375C20.25 11.4365 20.171 11.6272 20.0303 11.7679C19.8897 11.9085 19.6989 11.9875 19.5 11.9875H16.5C16.3011 11.9875 16.1103 11.9085 15.9697 11.7679C15.829 11.6272 15.75 11.4365 15.75 11.2375ZM14.25 13.7375C14.25 13.5386 14.329 13.3479 14.4697 13.2072C14.6103 13.0666 14.8011 12.9875 15 12.9875H19.5C19.6989 12.9875 19.8897 13.0666 20.0303 13.2072C20.171 13.3479 20.25 13.5386 20.25 13.7375C20.25 13.9365 20.171 14.1272 20.0303 14.2679C19.8897 14.4085 19.6989 14.4875 19.5 14.4875H15C14.8011 14.4875 14.6103 14.4085 14.4697 14.2679C14.329 14.1272 14.25 13.9365 14.25 13.7375ZM13.75 16.2375C13.75 16.0386 13.829 15.8479 13.9697 15.7072C14.1103 15.5666 14.3011 15.4875 14.5 15.4875H19.5C19.6989 15.4875 19.8897 15.5666 20.0303 15.7072C20.171 15.8479 20.25 16.0386 20.25 16.2375C20.25 16.4365 20.171 16.6272 20.0303 16.7679C19.8897 16.9085 19.6989 16.9875 19.5 16.9875H14.5C14.3011 16.9875 14.1103 16.9085 13.9697 16.7679C13.829 16.6272 13.75 16.4365 13.75 16.2375ZM13.75 18.7376C13.75 18.5386 13.829 18.3479 13.9697 18.2072C14.1103 18.0666 14.3011 17.9876 14.5 17.9876H17C17.1989 17.9876 17.3897 18.0666 17.5303 18.2072C17.671 18.3479 17.75 18.5386 17.75 18.7376C17.75 18.9365 17.671 19.1272 17.5303 19.2679C17.3897 19.4085 17.1989 19.4876 17 19.4876H14.5C14.3011 19.4876 14.1103 19.4085 13.9697 19.2679C13.829 19.1272 13.75 18.9365 13.75 18.7376Z" fill="#036C58"/>
            </svg>
        </div>
        <button id="reset-filters">Reset Filters</button>
    </div>
    <div class="cusrp-border-bottom"></div>

    <div class="card-body p-0">
        <!-- Categories -->
        <div class="cusrp-filter-section p-3">
            <span class="cusrp-filter-title">Categories</span>
            <div class="cusrp-search-wrapper mb-3 mt-3">
                <input type="text" class="cusrp-search-input" id="cusrp-category-search" placeholder="Search categories..." />
            </div>
            <ul id="cusrp-category-list" class="cusrp-filter-list list-unstyled">
                <?php foreach ($block->getCategories() as $category): ?>
                    <li class="cusrp-filter-item">
                        <div class="cusrp-form-check">
                            <input type="checkbox" class="cusrp-filter-checkbox" data-filter="category" data-value="<?= $category->getId() ?>" id="cat_<?= $category->getId() ?>">
                            <label class="cusrp-filter-label" for="cat_<?= $category->getId() ?>"><?= $category->getName() ?> (<?= $category->getData('product_count') ?>)</label>
                        </div>
                    </li>
                <?php endforeach; ?>
            </ul>
        </div>
        <div class="cusrp-border-bottom"></div>
        
        <!-- Manufacturers -->
        <div class="cusrp-filter-section p-3">
            <span class="cusrp-filter-title ">Manufacturers</span>
            <div class="cusrp-search-wrapper mb-3 mt-3">
                <input type="text" id="cusrp-manufacturer-search" class="cusrp-search-input" placeholder="Search Here...">
            </div>
            <ul id="cusrp-manufacturer-list" class="cusrp-filter-list list-unstyled">
                <?php foreach ($block->getManufacturers(10) as $manufacturer): ?>
                    <li class="cusrp-filter-item">
                        <div class="cusrp-form-check">
                            <input type="checkbox" class="cusrp-filter-checkbox" data-filter="manufacturer" data-value="<?= $manufacturer['value'] ?>" id="man_<?= $manufacturer['value'] ?>">
                            <label class="cusrp-filter-label" for="man_<?= $manufacturer['value'] ?>"><?= $manufacturer['label'] ?></label>
                        </div>
                    </li>
                <?php endforeach; ?>
            </ul>
        </div>
        <div class="cusrp-border-bottom"></div>

        <!-- Prescription Check -->
        <div class="cusrp-filter-section p-3">
            <span class="cusrp-filter-title ">Prescription Required</span>
            <ul class="cusrp-filter-list list-unstyled">
                <?php foreach ($block->getPrescriptionOptions() as $option): ?>
                    <li class="cusrp-filter-item">
                        <div class="cusrp-form-check">
                            <input type="checkbox" class="cusrp-filter-checkbox" data-filter="prescription_check" data-value="<?= $option['value'] ?>" id="pres_<?= $option['value'] ?>">
                            <label class="cusrp-filter-label" for="pres_<?= $option['value'] ?>"><?= $option['label'] ?></label>
                        </div>
                    </li>
                <?php endforeach; ?>
            </ul>
        </div>
        <div class="cusrp-border-bottom"></div>

        <!-- Price Slider -->
        <div class="cusrp-filter-section p-3">
            <span class="cusrp-filter-title ">Price</span>
            <div id="cusrp-price-slider" class="cusrp-slider"></div>
            <span id="cusrp-price-range" class="cusrp-price-display d-block text-center"></span>
            <ul class="cusrp-filter-list list-unstyled mt-4">
                <li class="cusrp-filter-item">
                    <div class="cusrp-form-check">
                        <input type="checkbox" class="cusrp-range-filter-checkbox" id="price_0_500" data-min="0" data-max="500">
                        <label class="cusrp-filter-label" for="price_0_500">₹0 - ₹500</label>
                    </div>
                </li>
                <li class="cusrp-filter-item">
                    <div class="cusrp-form-check">
                        <input type="checkbox" class="cusrp-range-filter-checkbox" id="price_500_1000" data-min="500" data-max="1000">
                        <label class="cusrp-filter-label" for="price_500_1000">₹500 - ₹1000</label>
                    </div>
                </li>
                <li class="cusrp-filter-item">
                    <div class="cusrp-form-check">
                        <input type="checkbox" class="cusrp-range-filter-checkbox" id="price_1000_2000" data-min="1000" data-max="2000">
                        <label class="cusrp-filter-label" for="price_1000_2000">₹1000 - ₹2000</label>
                    </div>
                </li>
                <li class="cusrp-filter-item">
                    <div class="cusrp-form-check">
                        <input type="checkbox" class="cusrp-range-filter-checkbox" id="price_2000_plus" data-min="2000" data-max="<?= $block->getDefaultPriceMax() ?>">
                        <label class="cusrp-filter-label" for="price_2000_plus">Above ₹2000</label>
                    </div>
                </li>
            </ul>
        </div>
    </div>
</div>

<script>
require(['jquery', 'jquery/ui'], function($) {
    $(document).ready(function() {
        window.activeFilters = {
            category: [],
            manufacturer: [],
            prescription_check: [],
            price_min: <?= $block->getDefaultPriceMin() ?>,
            price_max: <?= $block->getDefaultPriceMax() ?>,
            price_ranges: [],
            sort_field: 'price',
            sort_direction: 'desc'
        };
        var currentPage = <?= $block->getData('page') ?: 1 ?>;
        var totalPages = <?= $block->getData('totalPages') ?: 1 ?>;
        
        // Price range checkbox event handlers

        $('.cusrp-range-filter-checkbox').on('change', function() {
            const checkboxMin = parseInt($(this).data('min'));
            const checkboxMax = parseInt($(this).data('max'));
            const range = checkboxMin + '-' + checkboxMax;
            
            if ($(this).is(':checked')) {
                if (!window.activeFilters.price_ranges.includes(range)) {
                    window.activeFilters.price_ranges.push(range);
                }
            } else {
                window.activeFilters.price_ranges = window.activeFilters.price_ranges.filter(r => r !== range);
            }

            // Sync the checkboxes with same min/max values across desktop and mobile
            $('.cusrp-range-filter-checkbox').each(function() {
                const min = $(this).data('min');
                const max = $(this).data('max');
                const thisRange = min + '-' + max;
                
                if (thisRange === range) {
                    $(this).prop('checked', window.activeFilters.price_ranges.includes(range));
                }
            });

            // Update sliders based on selected ranges
            if (window.activeFilters.price_ranges.length > 0) {
                let minPrice = <?= $block->getDefaultPriceMax() ?>;
                let maxPrice = <?= $block->getDefaultPriceMin() ?>;
                
                // Find min/max for visual display on the slider
                $('.cusrp-range-filter-checkbox:checked').each(function() {
                    const cMin = parseInt($(this).data('min'));
                    const cMax = parseInt($(this).data('max'));
                    
                    if (cMin < minPrice) minPrice = cMin;
                    if (cMax > maxPrice) maxPrice = cMax;
                });
                
                // Update desktop slider
                if ($("#cusrp-price-slider").hasClass('ui-slider')) {
                    $("#cusrp-price-slider").slider("values", 0, minPrice);
                    $("#cusrp-price-slider").slider("values", 1, maxPrice);
                    $('#cusrp-price-range').text('₹' + minPrice + ' - ₹' + maxPrice);
                }
                
                // Update mobile slider
                if ($("#cusrp-mobile-price-slider").hasClass('ui-slider')) {
                    $("#cusrp-mobile-price-slider").slider("values", 0, minPrice);
                    $("#cusrp-mobile-price-slider").slider("values", 1, maxPrice);
                    $('#cusrp-mobile-price-range').text('₹' + minPrice + ' - ₹' + maxPrice);
                }
                
                // Update global filter values
                window.activeFilters.price_min = minPrice;
                window.activeFilters.price_max = maxPrice;
            } else {
                // Reset slider visuals if no ranges selected
                const defaultMin = <?= $block->getDefaultPriceMin() ?>;
                const defaultMax = <?= $block->getDefaultPriceMax() ?>;
                
                // Update desktop slider
                if ($("#cusrp-price-slider").hasClass('ui-slider')) {
                    $("#cusrp-price-slider").slider("values", 0, defaultMin);
                    $("#cusrp-price-slider").slider("values", 1, defaultMax);
                    $('#cusrp-price-range').text('₹' + defaultMin + ' - ₹' + defaultMax);
                }
                
                // Update mobile slider
                if ($("#cusrp-mobile-price-slider").hasClass('ui-slider')) {
                    $("#cusrp-mobile-price-slider").slider("values", 0, defaultMin);
                    $("#cusrp-mobile-price-slider").slider("values", 1, defaultMax);
                    $('#cusrp-mobile-price-range').text('₹' + defaultMin + ' - ₹' + defaultMax);
                }
                
                // Update global filter values
                window.activeFilters.price_min = defaultMin;
                window.activeFilters.price_max = defaultMax;
            }
            
            // Apply filters
            window.applyFilters();
        });

        
        // Initialize price slider
        function initPriceSlider(sliderSelector, rangeDisplaySelector) {
            var minPrice = <?= $block->getDefaultPriceMin() ?>;
            var maxPrice = <?= $block->getDefaultPriceMax() ?>;
            
            try {
                if ($(sliderSelector).hasClass('ui-slider')) {
                    $(sliderSelector).slider('destroy');
                }
                
                $(sliderSelector).slider({
                    range: true,
                    min: minPrice,
                    max: maxPrice,
                    values: [window.activeFilters.price_min || minPrice, window.activeFilters.price_max || maxPrice],
                    slide: function(event, ui) {
                        $(rangeDisplaySelector).text('₹' + ui.values[0] + ' - ₹' + ui.values[1]);
                    },
                    stop: function(event, ui) {
                        window.activeFilters.price_min = ui.values[0];
                        window.activeFilters.price_max = ui.values[1];
                        window.activeFilters.price_ranges = [];
                        
                        // Uncheck all price range checkboxes
                        $('.cusrp-range-filter-checkbox').prop('checked', false);
                        
                        // Update mobile slider too if it exists
                        if ($("#cusrp-mobile-price-slider").hasClass('ui-slider')) {
                            $("#cusrp-mobile-price-slider").slider("values", 0, ui.values[0]);
                            $("#cusrp-mobile-price-slider").slider("values", 1, ui.values[1]);
                            $('#cusrp-mobile-price-range').text('₹' + ui.values[0] + ' - ₹' + ui.values[1]);
                        }
                        
                        window.applyFilters();
                    }
                });
                
                $(rangeDisplaySelector).text('₹' + (window.activeFilters.price_min || minPrice) + ' - ₹' + (window.activeFilters.price_max || maxPrice));
            } catch (e) {
                console.error('Error initializing slider:', e);
            }
        }
        
        // Initialize both sliders
        initPriceSlider('#cusrp-price-slider', '#cusrp-price-range'); // Desktop
        initPriceSlider('#cusrp-mobile-price-slider', '#cusrp-mobile-price-range'); // Mobile
        
        // Make sure to reinitialize sliders when tabs change
        $('.cusrp-mobile-filter-tab').on('click', function() {
            if ($(this).data('tab') === 'price') {
                // Reinitialize the mobile slider when the price tab is selected
                setTimeout(function() {
                    initPriceSlider('#cusrp-mobile-price-slider', '#cusrp-mobile-price-range');
                }, 100);
            }
        });
        
        // Manufacturer search functionality
        $('#cusrp-manufacturer-search').on('input', function() {
            var search = $(this).val();
            
            $.ajax({
                url: '<?= $block->getUrl('searchresult/filter/manufacturersearch') ?>',
                data: {search: search},
                success: function(data) {
                    $('#cusrp-manufacturer-list').html(data);
                    
                    // After updating the HTML, restore the checked state
                    $('.cusrp-filter-checkbox[data-filter="manufacturer"]').each(function() {
                        var value = $(this).data('value');
                        // Check if this value is in activeFilters
                        if (activeFilters.manufacturer.includes(parseInt(value)) || 
                            activeFilters.manufacturer.includes(value.toString())) {
                            $(this).prop('checked', true);
                        }
                    });
                    
                    // Re-attach event handlers to the new checkboxes
                    $('.cusrp-filter-checkbox[data-filter="manufacturer"]').on('change', function() {
                        var value = $(this).data('value');
                        if ($(this).is(':checked')) {
                            if (!activeFilters.manufacturer.includes(value)) {
                                activeFilters.manufacturer.push(value);
                            }
                        } else {
                            activeFilters.manufacturer = activeFilters.manufacturer.filter(function(v) {
                                return v !== value;
                            });
                        }
                        applyFilters();
                    });
                }
            });
        });
        
        // Category search functionality
        $('#cusrp-category-search').on('input', function() {
            var search = $(this).val();
            
            $.ajax({
                url: '<?= $block->getUrl('searchresult/filter/categorySearch') ?>',
                data: {search: search},
                success: function(data) {
                    $('#cusrp-category-list').html(data);
                    
                    // After updating the HTML, restore the checked state
                    $('.cusrp-filter-checkbox[data-filter="category"]').each(function() {
                        var value = $(this).data('value');
                        // Check if this value is in activeFilters
                        if (activeFilters.category.includes(parseInt(value)) || 
                            activeFilters.category.includes(value.toString())) {
                            $(this).prop('checked', true);
                        }
                    });
                    
                    // Re-attach event handlers to the new checkboxes
                    $('.cusrp-filter-checkbox[data-filter="category"]').on('change', function() {
                        var value = $(this).data('value');
                        if ($(this).is(':checked')) {
                            if (!activeFilters.category.includes(value)) {
                                activeFilters.category.push(value);
                            }
                        } else {
                            activeFilters.category = activeFilters.category.filter(function(v) {
                                return v !== value;
                            });
                        }
                        applyFilters();
                    });
                }
            });
        });
        
        // Apply filters function
        window.applyFilters = function(page) {
            currentPage = parseInt(page) || 1;

            var filters = {
                category: activeFilters.category,
                manufacturer: activeFilters.manufacturer,
                prescription_check: activeFilters.prescription_check,
                price_ranges: activeFilters.price_ranges, // Add this line
                price_min: activeFilters.price_min,
                price_max: activeFilters.price_max,
                sort_field: activeFilters.sort_field || 'price',
                sort_direction: activeFilters.sort_direction || 'desc',
                q: '<?= $block->getRequest()->getParam('q') ?>',
                page: currentPage,
                page_size: 12 
            };
            
            $.ajax({
                url: '<?= $block->getUrl('searchresult/filter/apply') ?>',
                data: filters,
                showLoader: true,
                dataType: 'json',
                beforeSend: function() {
                    $('#cusrp-product-list').addClass('loading');
                },
                success: function(response) {
                    $('#cusrp-product-list').removeClass('loading');
                    
                    if (response && response.success) {
                        $('#cusrp-product-list').html(response.html);
                        currentPage = parseInt(response.page);
                        totalPages = parseInt(response.totalPages);
                        
                        // Explicitly set these values globally
                        window.currentPage = currentPage;
                        window.totalPages = totalPages;
                        
                        initPaginationHandlers();
                        if (typeof truncateCusrpDealsProductName === 'function') {
                            truncateCusrpDealsProductName();
                        }
                    }
                }
            });
        };

        function initPaginationHandlers() {
            $('.cusrp-pagination-number, .cusrp-pagination-btn').off('click');
            
            $('.cusrp-pagination-number, .cusrp-pagination-btn').on('click', function(e) {
                e.preventDefault();
                
                if ($(this).hasClass('disabled') || $(this).hasClass('active')) {
                    return false;
                }
                
                var page = 1;
                
                if ($(this).hasClass('prev')) {
                    page = parseInt(currentPage) - 1;
                } else if ($(this).hasClass('next')) {
                    page = parseInt(currentPage) + 1;
                } else {
                    var href = $(this).attr('href');
                    var pageMatch = href.match(/[\?&]page=(\d+)/);
                    if (pageMatch && pageMatch[1]) {
                        page = parseInt(pageMatch[1]);
                    }
                }
                
                applyFilters(page);
                return false;
            });
        }
        
        // Attach event handlers to filter checkboxes
        $('.cusrp-filter-checkbox').on('change', function() {
            var filter = $(this).data('filter');
            var value = $(this).data('value');
            
            if ($(this).is(':checked')) {
                if (!activeFilters[filter].includes(value)) {
                    activeFilters[filter].push(value);
                }
            } else {
                activeFilters[filter] = activeFilters[filter].filter(function(v) {
                    return v !== value;
                });
            }
            
            applyFilters();
        });
        
        // Reset filters event handler
        $('#reset-filters').on('click', function() {
            activeFilters = {
                category: [],
                manufacturer: [],
                prescription_check: [],
                price_min: <?= $block->getDefaultPriceMin() ?>,
                price_max: <?= $block->getDefaultPriceMax() ?>,
                price_ranges: [],
                sort_field: 'price',
                sort_direction: 'desc'
            };
            
            // Uncheck all checkboxes
            $('.cusrp-filter-checkbox').prop('checked', false);
            $('.cusrp-range-filter-checkbox').prop('checked', false);
            $('#cusrp-sort-select').val('price-high-low');
            
            // Reset price slider
            $("#cusrp-price-slider").slider("values", 0, activeFilters.price_min);
            $("#cusrp-price-slider").slider("values", 1, activeFilters.price_max);
            $('#cusrp-price-range').text('₹' + activeFilters.price_min + ' - ₹' + activeFilters.price_max);
            $('#cusrp-category-search').val('');
            $('#cusrp-manufacturer-search').val('');
    
            $.ajax({
                url: '<?= $block->getUrl('searchresult/filter/categorySearch') ?>',
                data: {search: ''},
                success: function(data) {
                    $('#cusrp-category-list').html(data);
                }
            });
            
            $.ajax({
                url: '<?= $block->getUrl('searchresult/filter/manufacturersearch') ?>',
                data: {search: ''},
                success: function(data) {
                    $('#cusrp-manufacturer-list').html(data);
                }
            });
            
            // Apply filters
            applyFilters();
        });

        // Sort dropdown change event handler
        $('#cusrp-sort-select').on('change', function() {
            var sortValue = $(this).val();
            var sortParams = {};
            
            switch(sortValue) {
                case 'price-high-low':
                    sortParams = {sort_field: 'price', sort_direction: 'desc'};
                    break;
                case 'price-low-high':
                    sortParams = {sort_field: 'price', sort_direction: 'asc'};
                    break;
                case 'name-asc':
                    sortParams = {sort_field: 'name', sort_direction: 'asc'};
                    break;
                case 'name-desc':
                    sortParams = {sort_field: 'name', sort_direction: 'desc'};
                    break;
                default:
                    sortParams = {sort_field: 'price', sort_direction: 'desc'};
            }
            
            activeFilters.sort_field = sortParams.sort_field;
            activeFilters.sort_direction = sortParams.sort_direction;
            
            applyFilters();
        });

        $(document).on('contentUpdated', initPaginationHandlers);
        initPaginationHandlers();
    });
});
</script>